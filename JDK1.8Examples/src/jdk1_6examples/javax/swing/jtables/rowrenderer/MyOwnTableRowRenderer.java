/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * MyOwnTableRowRenderer.java
 *
 * Created on 2/Dez/2008, 15:06:34
 */

package jdk1_6examples.javax.swing.jtables.rowrenderer;

import java.awt.Color;
import java.awt.Component;
import javax.swing.JLabel;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.TableColumn;


/**
 *
 * @author c2334
 */
public class MyOwnTableRowRenderer extends javax.swing.JFrame {

    /** Creates new form MyOwnTableRowRenderer */
    public MyOwnTableRowRenderer() {
        initComponents();
        customizeComponents();
    }

  private void customizeComponents() {
    final int nClolumns = this.jTable1.getColumnCount();

    for(int i = 0; i < nClolumns; i++) {
      this.jTable1.getColumn(this.jTable1.getColumnName(i)).setCellRenderer(
          new MyOwnTableCellRenderer(this.jTable1));
    }
    
  }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
  // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
  private void initComponents() {

    jScrollPane1 = new javax.swing.JScrollPane();
    jTable1 = new javax.swing.JTable();

    setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

    jTable1.setModel(new javax.swing.table.DefaultTableModel(
      new Object [][] {
        {"Mon1", "XPTO1", "Camera 1"},
        {"-", "XPTO2", "Camera 2"},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null},
        {null, null, null}
      },
      new String [] {
        "Mon", "Alarm", "Camera"
      }
    ) {
      Class[] types = new Class [] {
        java.lang.String.class, java.lang.String.class, java.lang.String.class
      };
      boolean[] canEdit = new boolean [] {
        false, false, false
      };

      public Class getColumnClass(int columnIndex) {
        return types [columnIndex];
      }

      public boolean isCellEditable(int rowIndex, int columnIndex) {
        return canEdit [columnIndex];
      }
    });
    jTable1.getTableHeader().setReorderingAllowed(false);
    jScrollPane1.setViewportView(jTable1);
    jTable1.getColumnModel().getColumn(0).setResizable(false);
    jTable1.getColumnModel().getColumn(1).setResizable(false);
    jTable1.getColumnModel().getColumn(2).setResizable(false);

    getContentPane().add(jScrollPane1, java.awt.BorderLayout.CENTER);

    pack();
  }// </editor-fold>//GEN-END:initComponents

    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
              MyOwnTableRowRenderer m = new MyOwnTableRowRenderer();
              m.setLocation(800,450);
              m.setVisible(true);
            }
        });
    }

  // Variables declaration - do not modify//GEN-BEGIN:variables
  private javax.swing.JScrollPane jScrollPane1;
  private javax.swing.JTable jTable1;
  // End of variables declaration//GEN-END:variables

}

class MyOwnTableCellRenderer extends DefaultTableCellRenderer{

  final JTable jTable;
  final Color colorBack;
  final Color colorFore;

  MyOwnTableCellRenderer(final JTable jTable){
    super.setHorizontalAlignment(JLabel.LEFT);

    this.jTable = jTable;
    this.colorBack = this.jTable.getBackground();
    this.colorFore = this.jTable.getForeground();
  }

  public Component getTableCellRendererComponent(
      final JTable table,
      final Object value,
      final boolean isSelected,
      final boolean hasFocus,
      final int row,
      final int column) {

    System.out.println("value: " +value);

    if(!isSelected){
      if(value != null && ((String)value).equals("-")){
        setBackground(Color.LIGHT_GRAY);
        setForeground(Color.WHITE);

      }else{
        final Object zalue = this.jTable.getModel().getValueAt(row, 0);
        if(zalue != null && ((String)zalue).equals("-")){
          setBackground(Color.LIGHT_GRAY);
          setForeground(Color.WHITE);
        }else{
          setBackground(this.colorBack);
          setForeground(this.colorFore);
        }
      }
    }

    return super.getTableCellRendererComponent(
        table,
        value,
        isSelected,
        hasFocus,
        row,
        column);
  }

}














