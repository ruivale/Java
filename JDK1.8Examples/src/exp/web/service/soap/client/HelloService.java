/**
 * <p>
 * Classname: exp.web.service.soap.client.HelloService
 * </p>
 * <p>
 * <p>
 * Copyright: Copyright (c) 2015 Efacec Engenharia e Sistemas, S.A.
 * <br>
 * This software is the confidential and proprietary information of EFACEC Eng. Sistemas.
 * You shall not disclose such Confidential Information and shall use it only in
 * accordance with the terms of the license agreement you entered into EFACEC SE.
 * </p>
 * <p>
 * Company: EFACEC Eng. Sistemas
 * <br>
 * Rua Eng.º Frederico Ulrich ? Ap. 3078
 * <br>
 * 4471-907 Moreira da Maia
 * <br>
 * PORTUGAL
 * <br>
 * Tel: +351 22 940 2000
 * <br>
 * Fax: +351 22 948 5428
 * <br>
 * Web: www.efacec.pt
 * <br>
 * Email: te@efacec.pt
 * </p>
 */
package exp.web.service.soap.client;

import java.net.MalformedURLException;
import java.net.URL;
import java.util.logging.Logger;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;


/**
 * <p>
 * This class was generated by the JAX-WS RI.
 * <p>
 * JAX-WS RI 2.1.6 in JDK 6
 * <p>
 * Generated source version: 2.1
 * <p>
 * <p>
 * <p>
 */

@WebServiceClient(name = "HelloService", targetNamespace = "http://soap.service.web.exp/", wsdlLocation
                  = "http://localhost:1212/hello?wsdl")
public class HelloService
    extends Service {

  private final static URL HELLOSERVICE_WSDL_LOCATION;

  private final static Logger logger = Logger.getLogger(exp.web.service.soap.client.HelloService.class.
      getName());

  static {

    URL url = null;

    try {

      URL baseUrl;

      baseUrl = exp.web.service.soap.client.HelloService.class.getResource(".");

      url = new URL(baseUrl, "http://localhost:1212/hello?wsdl");

    } catch (MalformedURLException e) {

      logger.warning(
          "Failed to create URL for the wsdl Location: 'http://localhost:1212/hello?wsdl', retrying as a local file");

      logger.warning(e.getMessage());

    }

    HELLOSERVICE_WSDL_LOCATION = url;

  }

  public HelloService(URL wsdlLocation,
                      QName serviceName) {

    super(wsdlLocation, serviceName);

  }

  public HelloService() {

    super(HELLOSERVICE_WSDL_LOCATION, new QName("http://soap.service.web.exp/", "HelloService"));

  }

  /**
   *
   *
   *
   * @return
   *
   *         returns Hello
   *
   */
  @WebEndpoint(name = "HelloPort")
  public Hello getHelloPort() {

    return super.getPort(new QName("http://soap.service.web.exp/", "HelloPort"), Hello.class);

  }

  /**
   *
   *
   *
   * @param features
   *
   *                 A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy. Supported features not in the <code>features</code> parameter will have their default values.
   *
   * @return
   *
   *         returns Hello
   *
   */
  @WebEndpoint(name = "HelloPort")
  public Hello getHelloPort(WebServiceFeature... features) {

    return super.getPort(new QName("http://soap.service.web.exp/", "HelloPort"), Hello.class, features);

  }

}
